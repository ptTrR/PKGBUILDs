# vim:set ts=2 sw=2 et:
# Contributor: graysky <graysky AT archlinux DOT us>
# Contributor: popcornmix & asavah from kodi forums - adapting for makechrootpkg
# Contributor: BlackIkeEagle < ike DOT devolder AT gmail DOT com >
# Contributor: Oleg Rakhmanov <oleg [at] archlinuxarm [dot] com>
# Contributor: tomasgroth at yahoo.dk
# Contributor: WarheadsSE <max@warheads.net>
# Contributor: Adrian Fedoreanu <adrian [dot] fedoreanu [at] gmail [dot] com>
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: DonVla <donvla@users.sourceforge.net>
# Contributor: Ulf Winkelvos <ulf [at] winkelvos [dot] de>
# Contributor: Ralf Barth <archlinux dot org at haggy dot org>
# Contributor: B & monty - Thanks for your hints :)
# Contributor: marzoul
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: Brad Fanella <bradfanella@archlinux.us>
# Contributor: [vEX] <niechift.dot.vex.at.gmail.dot.com>
# Contributor: Zeqadious <zeqadious.at.gmail.dot.com>
# Contributor: Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Maxime Gauduin <alucryd@gmail.com>

buildarch=4

_prefix=/usr

pkgbase=kodi-rpi
pkgname=('kodi-rpi' 'kodi-rpi-eventclients' 'kodi-rpi-tools-texturepacker' 'kodi-rpi-dev')
pkgver=18.9
pkgrel=2
_codename=Leia
_ffmpeg_version="4.2.2-Matrix-Alpha1"
_libdvdcss_version="1.4.2-$_codename-Beta-5"
_libdvdnav_version="6.0.0-$_codename-Alpha-3"
_libdvdread_version="6.0.0-$_codename-Alpha-3"
_fmt_version="5.1.0"
_crossguid_version="8f399e8bd4"
_fstrcmp_version="0.7.D001"
_flatbuffers_version="1.9.0"
arch=('armv7h')
url="https://github.com/popcornmix/xbmc/tree/leia_pi4"
license=('GPL2')
makedepends=(
  'afpfs-ng' 'bluez-libs' 'cmake' 'curl' 'doxygen' 'glew'
  'gperf' 'hicolor-icon-theme' 'java-runtime' 'libaacs' 'libass'
  'libbluray' 'libcdio' 'libcec-rpi' 'libgl' 'mariadb-libs' 'libmicrohttpd'
  'libmodplug' 'libmpeg2' 'libnfs' 'libplist' 'libpulse' 'libva'
  'libvdpau' 'libxrandr' 'libxslt' 'lirc' 'lzo' 'mesa' 'nasm'
  'python2-pycryptodomex' 'python2-pillow6' 'python2-pybluez' 'python2-simplejson'
  'shairplay' 'smbclient' 'taglib' 'tinyxml' 'swig'
  'upower' 'giflib' 'rapidjson' 'ghostscript'
  'libinput' 'libxkbcommon'
)

# leia_rpi4 branch contains patches to enable hardware decoding on rpi4
# expect kodi v19 to not to use MMAL but to use ffmpeg+v4l2
# https://github.com/popcornmix/xbmc/commits/leia_pi4

source=(
  # popcornmix branch
  "xbmc-$pkgver-$_codename.tar.gz::https://github.com/popcornmix/xbmc/archive/leia_pi4_$pkgver-Leia.tar.gz"
  kodi.service
  99-kodi.rules
  polkit.rules
  "libdvdcss-$_libdvdcss_version.tar.gz::https://github.com/xbmc/libdvdcss/archive/$_libdvdcss_version.tar.gz"
  "libdvdnav-$_libdvdnav_version.tar.gz::https://github.com/xbmc/libdvdnav/archive/$_libdvdnav_version.tar.gz"
  "libdvdread-$_libdvdread_version.tar.gz::https://github.com/xbmc/libdvdread/archive/$_libdvdread_version.tar.gz"
  "ffmpeg-$_ffmpeg_version.tar.gz::https://github.com/xbmc/FFmpeg/archive/$_ffmpeg_version.tar.gz"
  "http://mirrors.kodi.tv/build-deps/sources/fmt-$_fmt_version.tar.gz"
  "http://mirrors.kodi.tv/build-deps/sources/crossguid-$_crossguid_version.tar.gz"
  "http://mirrors.kodi.tv/build-deps/sources/fstrcmp-$_fstrcmp_version.tar.gz"
  "http://mirrors.kodi.tv/build-deps/sources/flatbuffers-$_flatbuffers_version.tar.gz"
  01-fix.in-tree.ffmpeg.paths.for.makechrootpkg.hack.patch
  sysusers.conf
  tmpfiles.conf
  # use newer ffmpeg
  000-PR17300.patch::https://patch-diff.githubusercontent.com/raw/xbmc/xbmc/pull/17300.patch
)
noextract=(
  "libdvdcss-$_libdvdcss_version.tar.gz"
  "libdvdnav-$_libdvdnav_version.tar.gz"
  "libdvdread-$_libdvdread_version.tar.gz"
  "ffmpeg-$_ffmpeg_version.tar.gz"
  "fmt-$_fmt_version.tar.gz"
  "crossguid-$_crossguid_version.tar.gz"
  "fstrcmp-$_fstrcmp_version.tar.gz"
  "flatbuffers-$_flatbuffers_version.tar.gz"
)
sha256sums=('9a17ae7ff4ab036539ebd19223b65974fd4b0e5c2bb3eea96674efa6ee2fb22b'
            '91dd278d46eed0cb05ba733647c99379330f197daa87d33bf2b18032e5af5055'
            '8e14cf455898246d11edd4ff7f4ed11a44c729fb40c34455a5b336a90ccc1f7b'
            '5d38a895ee7b93689fab79124a3aad23a5e3e643abd08878d778d04066c8d26f'
            '38816f8373e243bc5950449b4f3b18938c4e1c59348e3411e23f31db4072e40d'
            '071e414e61b795f2ff9015b21a85fc009dde967f27780d23092643916538a57a'
            'a30b6aa0aad0f2c505bc77948af2d5531a80b6e68112addb4c123fca24d5d3bf'
            '0dba571f9809588cfbdc29d6a551dab4cd5736701653d9263847c9ac67bcde86'
            '73d4cab4fa8a3482643d8703de4d9522d7a56981c938eca42d929106ff474b44'
            '3d77d09a5df0de510aeeb940df4cb534787ddff3bb1828779753f5dfa1229d10'
            'e4018e850f80700acee8da296e56e15b1eef711ab15157e542e7d7e1237c3476'
            '5ca5491e4260cacae30f1a5786d109230db3f3a6e5a0eb45d0d0608293d247e3'
            'dddf376c59367dc6ec728723cc5aa0f77f7a25497a508127b03d0e9985fd8d56'
            'f521b98232e5035b7cada46cf03975b8d753e93d0802bf22913fceed769f9d96'
            '9c5e79ed8719cd032a3b17dac585aeff28a198e37af1da9af68ef1b86bab4d18'
            '3aaca3630689b76e7a7f35656a4ada3fb18ecd7e3fe199634264ccf76b96c0f0')

prepare() {
  # Must use MMAL headers and pc files rather than opengl ones so we copy the
  # contents of raspberrypi-firmware dependency to $srcdir and delete the offending
  # directories therein as well as redirect cmake

  mkdir -p "$srcdir/opt"
  cp -a /opt/vc "$srcdir/opt"
  rm -rf "$srcdir"/opt/vc/include/{EGL,GLES,GLES2}

  # Just these three are needed in a directory all by themselves
  # to which we point cmake via PKG_CONFIG_PATH

  mkdir "$srcdir/pkgconfig"
  for i in bcm_host.pc mmal.pc vcsm.pc; do
    cp "$srcdir/opt/vc/lib/pkgconfig/$i" "$srcdir/pkgconfig"
  done

  # force python 'binary' as python2
  [[ -d "$srcdir/path" ]] && rm -rf "$srcdir/path"
  mkdir "$srcdir/path"
  ln -s /usr/bin/python2 "$srcdir/path/python"

  cd "xbmc-leia_pi4_$pkgver-$_codename"

  [[ -d kodi-build ]] && rm -rf kodi-build
  mkdir "$srcdir/kodi-build"

  # Big thanks to asavah for helpful advice here and in the cmake step
  patch -Np1 -i ../01-fix.in-tree.ffmpeg.paths.for.makechrootpkg.hack.patch

  patch -Np1 -i ../000-PR17300.patch
}

build() {
  export PATH="$srcdir/path:$PATH"

  cd "$srcdir/kodi-build"

  # exporting PKG_CONFIG_PATH and building with the extra lib definitions
  # are part of the workaround discussed above

  export PKG_CONFIG_PATH="$srcdir/pkgconfig"

  _rootopt="$srcdir/opt/vc"
  _libdir="$_rootopt/lib"

  cmake -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    -DMMAL_INCLUDE_DIR="$_rootopt/include" \
    -DMMAL_LIBRARY="$_libdir/libmmal.so" \
    -DMMALCORE_LIBRARY="$_libdir/libmmal_core.so" \
    -DMMALUTIL_LIBRARY="$_libdir/libmmal_util.so" \
    -DMMALCLIENT_LIBRARY="$_libdir/libmmal_vc_client.so" \
    -DMMALCOMPONENT_LIBRARY="$_libdir/libmmal_components.so" \
    -DBCM_LIBRARY="$_libdir/libbcm_host.so" \
    -DVCHIQ_LIBRARY="$_libdir/libvchiq_arm.so" \
    -DVCHOSTIF_LIBRARY="$_libdir/libvchostif.a" \
    -DVCILCS_LIBRARY="$_libdir/libvcilcs.a" \
    -DVCOS_LIBRARY="$_libdir/libvcos.so" \
    -DVCSM_LIBRARY="$_libdir/libvcsm.so" \
    -DCONTAINER_LIBRARY="$_libdir/libcontainers.so" \
    -DVERBOSE=ON \
    -DENABLE_INTERNAL_FFMPEG=ON \
    -DENABLE_INTERNAL_FMT=ON \
    -DENABLE_INTERNAL_CROSSGUID=ON \
    -DENABLE_INTERNAL_FSTRCMP=ON \
    -DENABLE_INTERNAL_FLATBUFFERS=ON \
    -DENABLE_EVENTCLIENTS=ON \
    -DENABLE_VAAPI=OFF \
    -DENABLE_VDPAU=OFF \
    -DENABLE_OPENGL=OFF \
    -DENABLE_MYSQLCLIENT=ON \
    -Dlibdvdcss_URL="$srcdir/libdvdcss-$_libdvdcss_version.tar.gz" \
    -Dlibdvdnav_URL="$srcdir/libdvdnav-$_libdvdnav_version.tar.gz" \
    -Dlibdvdread_URL="$srcdir/libdvdread-$_libdvdread_version.tar.gz" \
    -DFFMPEG_URL="$srcdir/ffmpeg-$_ffmpeg_version.tar.gz" \
    -DFMT_URL="$srcdir/fmt-$_fmt_version.tar.gz" \
    -DCROSSGUID_URL="$srcdir/crossguid-$_crossguid_version.tar.gz" \
    -DFSTRCMP_URL="$srcdir/fstrcmp-$_fstrcmp_version.tar.gz" \
    -DFLATBUFFERS_URL="$srcdir/flatbuffers-$_flatbuffers_version.tar.gz" \
    -DCORE_PLATFORM_NAME=gbm \
    -DGBM_RENDER_SYSTEM=gles \
    ../"xbmc-leia_pi4_$pkgver-$_codename"
  make
  make preinstall
}

package_kodi-rpi() {
  pkgdesc="Media player and entertainment hub for Raspberry Pi 4, leia_pi4 fork"
  depends=(
    'desktop-file-utils' 'hicolor-icon-theme' 'mesa' 'python2-pycryptodomex'
    'python2-pillow6' 'python2-simplejson' 'xorg-xdpyinfo'
    'bluez-libs' 'curl' 'lcms2' 'libass' 'libbluray' 'libcdio' 'libcec-rpi'
    'libinput' 'libmicrohttpd' 'libnfs' 'libpulse' 'libva' 'libxkbcommon'
    'libxslt' 'lirc' 'mariadb-libs' 'python2' 'smbclient' 'taglib'
    'tinyxml' 'polkit' 'linux>=5.4.35'
  )
  optdepends=(
    'afpfs-ng: Apple shares support'
    'bluez: Blutooth support'
    'python2-pybluez: Bluetooth support'
    'libplist: Limited AirPlay support'
    'pulseaudio: PulseAudio support'
    'shairplay: Limited AirPlay support'
    'upower: Display battery level'
  )
  install='kodi.install'
  provides=('xbmc' "kodi=${pkgver}")
  conflicts=('xbmc' 'kodi' 'arm-mem-git' 'shairplay-git' 'kodi-rbp' 'kodi-rbp3' 'kodi-rbp4' 'kodi-rpi-legacy')
  replaces=('xbmc-rbp-git' 'kodi-rbp4')
  _components=('kodi' 'kodi-bin')

  export PATH="$srcdir/path:$PATH"

  cd kodi-build
  for _cmp in ${_components[@]}; do
  DESTDIR="$pkgdir" /usr/bin/cmake \
    -DCMAKE_INSTALL_COMPONENT="$_cmp" \
     -P cmake_install.cmake
  done

  # python2 is being used
  cd "$pkgdir"
  grep -lR '#!.*python' * | \
    while read file; do sed -s 's/\(#!.*python\)/\12/g' -i "$file"; done

  install -Dm755 "$srcdir/kodi-build/kodi-gbm" "$pkgdir/usr/lib/kodi/kodi-gbm"

  # fix permissions necessary for accelerated video playback
  install -Dm0644 "$srcdir/99-kodi.rules" "$pkgdir/etc/udev/rules.d/99-kodi.rules"

  # systemd manages kodi user
  install -Dm644 "$srcdir"/sysusers.conf "$pkgdir/usr/lib/sysusers.d/kodi.conf"
  install -Dm644 "$srcdir"/tmpfiles.conf "$pkgdir/usr/lib/tmpfiles.d/kodi.conf"

  # systemd service and polkit rules
  install -Dm0644 "$srcdir/kodi.service" "$pkgdir/usr/lib/systemd/system/kodi.service"
  install -Dm0644 "$srcdir/polkit.rules" "$pkgdir/usr/share/polkit-1/rules.d/10-kodi.rules"
  chmod 0750 "$pkgdir/usr/share/polkit-1/rules.d/"
}

package_kodi-rpi-eventclients() {
  pkgdesc="Kodi Event Clients for Raspberry Pi 4, leia_pi4 fork"
  provides=("kodi-eventclients=${pkgver}")
  conflicts=('kodi-rbp-eventclients' 'kodi-rbp3-eventclients' 'kodi-rbp4-eventclients' 'kodi-rpi-legacy-eventclients')
  replaces=('kodi-rbp4-eventclients')
  optdepends=('python2: most eventclients are implemented in python2')

  _components=(
    'kodi-eventclients-common'
    'kodi-eventclients-ps3'
    'kodi-eventclients-kodi-send'
  )

  export PATH="$srcdir/path:$PATH"

  cd kodi-build
  for _cmp in ${_components[@]}; do
    DESTDIR="$pkgdir" /usr/bin/cmake \
      -DCMAKE_INSTALL_COMPONENT="$_cmp" \
      -P cmake_install.cmake
  done

  # python2 is being used
  cd "$pkgdir"
  grep -lR '#!.*python' * | \
    while read file; do sed -s 's/\(#!.*python\)/\12/g' -i "$file"; done
}

package_kodi-rpi-tools-texturepacker() {
  pkgdesc="Kodi Texturepacker Tool for Raspberry Pi 4, leia_pi4 fork"
  depends=('libpng' 'giflib' 'libjpeg-turbo' 'lzo')
  conflicts=('kodi-rbp-tools-texturepacker' 'kodi-rbp3-tools-texturepacker' 'kodi-rbp4-tools-texturepacker' 'kodi-rpi-legacy-tools-texturepacker')
  replaces=('kodi-rbp4-tools-texturepacker')
  _components=('kodi-tools-texturepacker')

  export PATH="$srcdir/path:$PATH"

  cd kodi-build
  for _cmp in ${_components[@]}; do
    DESTDIR="$pkgdir" /usr/bin/cmake \
      -DCMAKE_INSTALL_COMPONENT="$_cmp" \
      -P cmake_install.cmake
  done
}

package_kodi-rpi-dev() {
  pkgdesc="Kodi dev files for Raspberry Pi 4, leia_pi4 fork"
  depends=('kodi')
  conflicts=('kodi-rbp-dev' 'kodi-rbp3-dev' 'kodi-rbp4-dev' 'kodi-rpi-legacy-dev')
  replaces=('kodi-rbp4-dev')
  provides=("kodi-dev=${pkgver}")

  _components=('kodi-addon-dev'
    'kodi-audio-dev'
    'kodi-eventclients-dev'
    'kodi-game-dev'
    'kodi-inputstream-dev'
    'kodi-peripheral-dev'
    'kodi-pvr-dev'
    'kodi-screensaver-dev'
    'kodi-visualization-dev')

  export PATH="$srcdir/path:$PATH"

  cd kodi-build
  for _cmp in ${_components[@]}; do
    DESTDIR="$pkgdir" /usr/bin/cmake \
      -DCMAKE_INSTALL_COMPONENT="$_cmp" \
      -P cmake_install.cmake
  done

  # python2 is being used
  cd "$pkgdir"
  grep -lR '#!.*python' * | \
    while read file; do sed -s 's/\(#!.*python\)/\12/g' -i "$file"; done
}
